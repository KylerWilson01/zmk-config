/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HYPER LA(LC(LS(LGUI))) 
#define MEH   LA(LC(LSHFT)) 

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | NONE|  '  |  ,  |  .  |  P  |  Y  |      |  F  |  G  |  C  |  R  |  L  | NONE|
// | NONE|  A  |  O  |  S  |  U  |  I  |      |  D  |  H  |  T  |  N  |  S  | NONE|
// | NONE|  ;  |  Q  |  J  |  K  |  X  |      |  B  |  M  |  W  |  V  |  Z  | NONE|
//                   | ESC | SPC | TAB |      |  /  | RET | BKSP|
                        bindings = <
   &none &kp APOS     &kp COMMA   &kp DOT      &kp P        &kp Y            &kp F       &kp G        &kp C        &kp R        &kp L        &none
   &none &hm LMETA A  &hm LALT O  &hm LSHFT S  &hm LCTRL T  &kp I            &kp D       &hm LCTRL H  &hm LSHFT T  &hm LALT N   &hm LMETA S  &none
   &none &kp SEMI     &hm RALT Q  &kp J        &kp K        &kp X            &kp B       &kp M        &kp W        &hm RALT V   &kp Z        &none
                                  &lt 1 ESC    &lt 1 SPACE  &lt 1 TAB        &lt 1 FSLH  &lt 1 RET    &lt 1 BKSP
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | BT2 |     |     |     |     |     |      |     |  7  |  8  |  9  |     |     |
// | BT1 | META| LALT| SHFT| CTRL|     |      |     |  4  |  5  |  6  |  0  |     |
// | BTCL|     | RALT|     |     |     |      |     |  1  |  2  |  3  |     |     |
//                   |     |     |     |      | RSE |     |     |
                        bindings = <
   &bt BT_SEL 1 &none     &none     &none      &none      &none         &none  &kp N7  &kp N8  &kp N9 &none  &none
   &bt BT_SEL 0 &kp LMETA &kp LALT  &kp LSHFT  &kp LCTRL  &kp RBKT      &none  &kp N4  &kp N5  &kp N6 &none  &none
   &bt BT_CLR   &none     &kp RALT  &none      &none      &none         &none  &kp N1  &kp N2  &kp N3 &none  &none
                                    &none      &none      &none         &none  &kp N0   &none
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     |  F9 | F10 | F11 | F12 |     |      |     |     |     |     |     |     |
// |     |  F5 |  F6 |  F7 |  F8 |     |      |     | LFT |  UP | RGT | HME |     |
// |     |  F1 |  F2 |  F3 |  F4 |     |      |     | PDWN| DWN | PUP | END |     |
//                   |     |     | LWR |      | RSE |     |     |
                        bindings = <
   &none &kp F9 &kp F10 &kp F11 &kp F12 &none         &none   &none     &none    &none     &none    &none 
   &none &kp F5 &kp F6  &kp F7  &kp F8  &none         &none   &kp LEFT  &kp UP   &kp RIGHT &kp HOME &none 
   &none &kp F1 &kp F2  &kp F3  &kp F4  &none         &none   &kp PG_DN &kp DOWN &kp PG_UP &kp END  &none 
                   	    &to 0   &trans  &to 1         &to 0   &trans    &trans
                        >;
                };
        };
};
